<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://judahsan.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://judahsan.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-04-11T13:20:42+00:00</updated><id>https://judahsan.github.io/feed.xml</id><title type="html">blank</title><subtitle>Software engineer, game developer, and all around tech geek. </subtitle><entry><title type="html">How to set up live reloading Golang</title><link href="https://judahsan.github.io/blog/2025/go-air/" rel="alternate" type="text/html" title="How to set up live reloading Golang"/><published>2025-03-02T10:00:00+00:00</published><updated>2025-03-02T10:00:00+00:00</updated><id>https://judahsan.github.io/blog/2025/go-air</id><content type="html" xml:base="https://judahsan.github.io/blog/2025/go-air/"><![CDATA[<h3 id="live-reloading-"><a href="https://stackoverflow.com/a/41429055/13919366">Live Reloading</a> <br/><br/></h3> <p>Live Reload reloads or refreshes the entire go app when a file changes. For example, if you were four links deep into your navigation and saved a change, live reloading would restart the app and load the app back to the initial route.</p> <h3 id="benefits-of-live-reload">Benefits of Live Reload<br/><br/></h3> <ol> <li>Increased Development Speed - Reduces downtime caused by repeatedly stopping and starting the server.</li> <li>Faster Debugging - Enables quick testing of changes and immediate feedback.</li> </ol> <h4 id="how-to-enable-live-reload-in-go">How to Enable Live Reload in Go<br/><br/></h4> <p><a href="https://github.com/air-verse/air">Air</a> is a powerful live-reloading CLI utility for developing Go applications. It detects changes on Go files and automatically reloads the server, ensuring that your changes are reflected in real-time. This enhances the developer experience by allowing them to focus on coding rather than manually restarting the application.</p> <h4 id="installation-and-setup-guide-for-air">Installation and Setup Guide for Air<br/><br/></h4> <ol> <li> <p><strong>Install via</strong>:</p> <p>Run the following command to install Air:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  go <span class="nb">install </span>github.com/air-verse/air@latest
</code></pre></div> </div> </li> <li> <p>Open Your Project Directory and Initialize <code class="language-plaintext highlighter-rouge">.air.toml</code>:</p> <ul> <li><strong>Navigate to your project path</strong>: <br/><br/></li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nb">cd</span> /path/to/your_project
</code></pre></div> </div> <ul> <li><strong>Initialize the Air configuration file</strong>: <br/><br/></li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  air init
</code></pre></div> </div> </li> </ol> <blockquote> <p>üîó After running the above, open the <code class="language-plaintext highlighter-rouge">.air.toml</code> file and adjust the settings as needed.</p> </blockquote> <h3 id="troubleshooting">Troubleshooting</h3> <ol> <li> <p><a href="https://stackoverflow.com/questions/78804418/go-air-isnt-building-my-project-after-i-moved-the-files-to-subdirectories">Air Not Rebuilding the Project After Moving Files</a></p> <p>If you move the Go files to subdirectories, Air may stop detecting changes.</p> </li> </ol> <h4 id="fix-Ô∏è">Fix üõ†Ô∏è</h4> <p>Modify the <code class="language-plaintext highlighter-rouge">cmd</code> parameter in the <code class="language-plaintext highlighter-rouge">.air.toml</code> file to specify the correct location of <code class="language-plaintext highlighter-rouge">main.go</code>.<br/><br/></p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cmd = "go build -o ./tmp/main ./cmd/web/."
</code></pre></div></div> <p>Update the <code class="language-plaintext highlighter-rouge">.include_dir</code> setting to ensure Air watches the correct directories:<br/><br/></p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>include_dir = ["cmd", "internal", "ui"]
</code></pre></div></div> <blockquote> <p>Note: Do not use a leading <code class="language-plaintext highlighter-rouge">./</code> in the directory names.</p> </blockquote> <p>Example Project Structure:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cmd/
  web/
internal/
ui/
 html/
   pages/
   partials/
 static/
   css/
   img/
   js/
.air.toml
.gitignore
go.mod
go.sum
</code></pre></div></div> <p><code class="language-plaintext highlighter-rouge">air.toml</code> file:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root = "."
testdata_dir = "testdata"
tmp_dir = "tmp"


[build]
  args_bin = []
  bin = "./tmp/main"
  cmd = "go build -o ./tmp/main ./cmd/web/."
  delay = 1000
  exclude_dir = ["assets", "tmp", "vendor", "testdata"]
  exclude_file = []
  exclude_regex = ["_test.go"]
  exclude_unchanged = false
  follow_symlink = false
  full_bin = ""
  include_dir = ["cmd", "internal", "ui"]
  include_ext = ["go", "tpl", "tmpl", "html"]
  include_file = []
  kill_delay = "0s"
  log = "build-errors.log"
  poll = false
  poll_interval = 0
  post_cmd = []
  pre_cmd = []
  rerun = false
  rerun_delay = 500
  send_interrupt = false
  stop_on_error = false

[color]
  app = ""
  build = "yellow"
  main = "magenta"
  runner = "green"
  watcher = "cyan"

[log]
  main_only = false
  silent = false
  time = false

[misc]
  clean_on_exit = false

[proxy]
  app_port = 0
  enabled = false
  proxy_port = 0

[screen]
  clear_on_rebuild = false
  keep_scroll = true
</code></pre></div></div>]]></content><author><name></name></author><category term="technology"/><category term="golang"/><category term="air"/><summary type="html"><![CDATA[Step by step guide to set up live reloading with Air for a Go project]]></summary></entry><entry><title type="html">Honeypots, A Lightweight Bot Defense Strategy</title><link href="https://judahsan.github.io/blog/2025/honeypot/" rel="alternate" type="text/html" title="Honeypots, A Lightweight Bot Defense Strategy"/><published>2025-03-02T10:00:00+00:00</published><updated>2025-03-02T10:00:00+00:00</updated><id>https://judahsan.github.io/blog/2025/honeypot</id><content type="html" xml:base="https://judahsan.github.io/blog/2025/honeypot/"><![CDATA[<h1 id="honeypots-a-lightweight-bot-defense-strategy">Honeypots: A Lightweight Bot Defense Strategy</h1> <h2 id="introduction">Introduction</h2> <ul> <li> <p>A honeypot, in the context of web security, is a trap designed to attract and detect malicious automated software (bots). It‚Äôs essentially a hidden field in a form that is invisible to human users but is often filled in by bots that blindly fill all form fields. If the honeypot field is populated, it‚Äôs a strong indicator that the submission is from a bot, allowing you to reject it.</p> </li> <li> <p>Honeypots allow your application to ignore spambots without forcing your users to fill out a captcha or jump through other hoops to fillout your form</p> </li> <li> <p>This is done by adding a hidden field only visible to spambots. This field helps admin identify whether the user is a spambot and not a user</p> </li> </ul> <p><strong>Benefit:</strong></p> <ul> <li><strong>Lightweight and User-Friendly:</strong> Unlike CAPTCHAs, honeypots don‚Äôt add friction for legitimate users.</li> <li><strong>Effective Against Basic Bots:</strong> They effectively block simple bots that blindly fill all form fields.</li> <li><strong>Simple Implementation:</strong> Relatively easy to implement in web forms.</li> </ul> <p><strong>Illustration:</strong></p> <p>Imagine a form with fields like ‚ÄúEmail,‚Äù ‚ÄúPassword,‚Äù and a hidden field labeled ‚ÄúNickname‚Äù (our honeypot). A human user won‚Äôt see or interact with ‚ÄúNickname.‚Äù However, a bot, programmed to fill all fields, will fill it. If the ‚ÄúNickname‚Äù field has data, it indicates a likely bot submission.</p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;form&gt;</span>
  <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"email"</span><span class="nt">&gt;</span>Email:<span class="nt">&lt;/label&gt;</span>
  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"email"</span> <span class="na">id=</span><span class="s">"email"</span> <span class="na">name=</span><span class="s">"email"</span><span class="nt">&gt;&lt;br&gt;&lt;br&gt;</span>

  <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"password"</span><span class="nt">&gt;</span>Password:<span class="nt">&lt;/label&gt;</span>
  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"password"</span> <span class="na">id=</span><span class="s">"password"</span> <span class="na">name=</span><span class="s">"password"</span><span class="nt">&gt;&lt;br&gt;&lt;br&gt;</span>

  <span class="nt">&lt;div</span> <span class="na">style=</span><span class="s">"display:none;"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"nickname"</span><span class="nt">&gt;</span>Leave this field blank:<span class="nt">&lt;/label&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">id=</span><span class="s">"nickname"</span> <span class="na">name=</span><span class="s">"nickname"</span> <span class="na">autocomplete=</span><span class="s">"off"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;/div&gt;</span>

  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"submit"</span> <span class="na">value=</span><span class="s">"Submit"</span><span class="nt">&gt;</span>
<span class="nt">&lt;/form&gt;</span>
</code></pre></div></div> <h2 id="-1-add-the-honeypot-field-in-your-devise-registration-form">‚úÖ 1. Add the Honeypot Field in Your Devise Registration Form</h2> <p>Edit:</p> <div class="language-erb highlighter-rouge"><div class="highlight"><pre class="highlight"><code># app/views/devise/registrations/new.html.erb
<span class="nt">&lt;div</span> <span class="na">style=</span><span class="s">"display:none;"</span><span class="nt">&gt;</span>
  <span class="cp">&lt;%=</span> <span class="n">f</span><span class="p">.</span><span class="nf">label</span> <span class="ss">:nickname</span><span class="p">,</span> <span class="s2">"Leave this field blank"</span> <span class="cp">%&gt;</span>
  <span class="cp">&lt;%=</span> <span class="n">f</span><span class="p">.</span><span class="nf">text_field</span> <span class="ss">:nickname</span><span class="p">,</span> <span class="ss">autocomplete: </span><span class="s2">"off"</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</code></pre></div></div> <p>Here, <code class="language-plaintext highlighter-rouge">:nickname</code> is the honeypot field. <code class="language-plaintext highlighter-rouge">autocomplete: "off"</code> is added to help prevent browser‚Äôs autofill features from accidentally filling the honeypot.</p> <h2 id="-2-permit-the-honeypot-param-in-your-controller">‚úÖ 2. Permit the Honeypot Param in Your Controller</h2> <p>In <code class="language-plaintext highlighter-rouge">application_controller.rb</code>:</p> <div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">ApplicationController</span> <span class="o">&lt;</span> <span class="no">ActionController</span><span class="o">::</span><span class="no">Base</span>
  <span class="n">before_action</span> <span class="ss">:configure_permitted_parameters</span><span class="p">,</span> <span class="ss">if: :devise_controller?</span>

  <span class="kp">protected</span>

  <span class="k">def</span> <span class="nf">configure_permitted_parameters</span>
    <span class="n">devise_parameter_sanitizer</span><span class="p">.</span><span class="nf">permit</span><span class="p">(</span><span class="ss">:sign_up</span><span class="p">,</span> <span class="ss">keys: </span><span class="p">[</span><span class="ss">:nickname</span><span class="p">])</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div> <p>This ensures that the <code class="language-plaintext highlighter-rouge">nickname</code> parameter is allowed in the form submission.</p> <h2 id="-3-add-honeypot-validation-to-your-user-model">‚úÖ 3. Add Honeypot Validation to Your User Model</h2> <p>In <code class="language-plaintext highlighter-rouge">user.rb</code>:</p> <div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">validate</span> <span class="ss">:nickname_should_be_blank</span>

<span class="k">def</span> <span class="nf">nickname_should_be_blank</span>
  <span class="n">errors</span><span class="p">.</span><span class="nf">add</span><span class="p">(</span><span class="ss">:base</span><span class="p">,</span> <span class="s2">"Bot detected"</span><span class="p">)</span> <span class="k">unless</span> <span class="n">nickname</span><span class="p">.</span><span class="nf">blank?</span>
<span class="k">end</span>
</code></pre></div></div> <p>This validation checks if the <code class="language-plaintext highlighter-rouge">nickname</code> field is empty. If it‚Äôs not, an error is added, and the registration fails.</p> <h2 id="-4-add-the-nickname-column-to-the-users-table">‚úÖ 4. Add the <code class="language-plaintext highlighter-rouge">nickname</code> Column to the Users Table</h2> <p>In your terminal:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rails generate migration AddNicknameToUsers nickname:string
rails db:migrate
</code></pre></div></div> <p>If you don‚Äôt want to store it, you can use <code class="language-plaintext highlighter-rouge">attr_accessor</code> instead of a DB column:</p> <div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">attr_accessor</span> <span class="ss">:nickname</span>
</code></pre></div></div> <p>In this case, no DB migration is needed. Perfect for pure honeypot use.</p> <h2 id="-5-optional-add-server-side-logging-for-bots">‚úÖ 5. (Optional) Add Server-Side Logging for Bots</h2> <p>In your model:</p> <div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">nickname_should_be_blank</span>
  <span class="k">if</span> <span class="n">nickname</span><span class="p">.</span><span class="nf">present?</span>
    <span class="no">Rails</span><span class="p">.</span><span class="nf">logger</span><span class="p">.</span><span class="nf">warn</span> <span class="s2">"üö® Bot detected during sign up: IP </span><span class="si">#{</span><span class="n">request</span><span class="p">.</span><span class="nf">remote_ip</span><span class="si">}</span><span class="s2">"</span> <span class="k">rescue</span> <span class="kp">nil</span>
    <span class="n">errors</span><span class="p">.</span><span class="nf">add</span><span class="p">(</span><span class="ss">:base</span><span class="p">,</span> <span class="s2">"Bot detected"</span><span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div> <p>Or trigger an event, email, or anything you want.</p> <h2 id="Ô∏è-problems-you-may-face">‚ö†Ô∏è Problems You May Face</h2> <ul> <li><strong>Advanced Bots:</strong> Sophisticated bots might be programmed to detect and avoid honeypots.</li> <li><strong>Accidental Human Interaction:</strong> Although rare, a user with accessibility needs or a very unusual browser setup could accidentally fill the hidden field.</li> <li><strong>Browser Autofill:</strong> some browser autofill features may accidently fill the hidden field. The autocomplete=‚Äùoff‚Äù attribute helps, but isn‚Äôt a perfect solution.</li> </ul> <h2 id="Ô∏è-alternative-solutions">üõ†Ô∏è Alternative Solutions</h2> <ul> <li><strong>CAPTCHA/reCAPTCHA:</strong> Provides a more robust defense against bots but can be intrusive to users.</li> <li><strong>Rate Limiting:</strong> Limits the number of registration attempts from a single IP address, preventing brute-force attacks.</li> <li><strong>Behavioral Analysis:</strong> Analyzes user behavior to detect bot-like patterns.</li> <li><strong>Double Opt-In:</strong> Requires users to confirm their email address, ensuring they are real.</li> <li><strong>Javascript challenges:</strong> Require javascript to be run to submit the form, which blocks many simple bots.</li> </ul> <h2 id="references">References</h2> <ul> <li><strong>OWASP (Open Web Application Security Project):</strong> For general web security principles. <ul> <li>OWASP Automated Threats Handbook - Web Applications: <a href="https://owasp.org/www-project-automated-threats-to-web-applications/">https://owasp.org/www-project-automated-threats-to-web-applications/</a></li> </ul> </li> <li><strong>Rails Security Guide:</strong> For Rails-specific security practices. <ul> <li>Rails Security Guide: <a href="https://guides.rubyonrails.org/security.html">https://guides.rubyonrails.org/security.html</a></li> </ul> </li> <li><strong>reCAPTCHA:</strong> Google‚Äôs CAPTCHA service. <ul> <li><a href="https://www.google.com/recaptcha/about/">https://www.google.com/recaptcha/about/</a></li> </ul> </li> <li><strong>Honeypot method and its use:</strong> <ul> <li><a href="https://en.wikipedia.org/wiki/Honeypot_(computing)">https://en.wikipedia.org/wiki/Honeypot_(computing)</a></li> </ul> </li> <li><strong>Web Application Security:</strong> <ul> <li><a href="https://developer.mozilla.org/en-US/docs/Web/Security">https://developer.mozilla.org/en-US/docs/Web/Security</a></li> </ul> </li> <li><strong>Honeypot field in User Registration Form for Elementor:</strong> <ul> <li><a href="https://ultimateelementor.com/docs/user-registration-form-with-honeypot/">https://ultimateelementor.com/docs/user-registration-form-with-honeypot/</a></li> </ul> </li> <li><strong>Better Honeypot Implementation (Form Anti-Spam):</strong> <ul> <li><a href="https://stackoverflow.com/questions/36227376/better-honeypot-implementation-form-anti-spam">https://stackoverflow.com/questions/36227376/better-honeypot-implementation-form-anti-spam</a></li> </ul> </li> </ul> <h2 id="-done">üéØ Done!</h2> <p>Real users won‚Äôt see the field, bots will likely fill it in, and your app quietly blocks them. Remember to complement this with other security measures for comprehensive protection.</p>]]></content><author><name></name></author><category term="technology,"/><category term="cybersecurity"/><category term="honeypot"/><summary type="html"><![CDATA[Intro to Honeypot]]></summary></entry><entry><title type="html">Running LLMs Locally with Open Web UI and Ollama</title><link href="https://judahsan.github.io/blog/2025/ollama-open-webui/" rel="alternate" type="text/html" title="Running LLMs Locally with Open Web UI and Ollama"/><published>2025-01-27T10:00:00+00:00</published><updated>2025-01-27T10:00:00+00:00</updated><id>https://judahsan.github.io/blog/2025/ollama-open-webui</id><content type="html" xml:base="https://judahsan.github.io/blog/2025/ollama-open-webui/"><![CDATA[<ul> <li> <p>Running LLMs Locally has been made fun and trivial with Open Web UI and Ollama</p> </li> <li> <p>Ollama simplifies the process of running open-source large language models (LLMs) on your computer</p> </li> <li> <p>Opem Web UI is a feature rich, user-friendly self-hosted AI platform that allows you to interact with AI models.</p> </li> </ul> <h3 id="key-features-of-open-web-ui-and-ollama">Key Features of Open Web UI and Ollama</h3> <ul> <li><strong>Easy to Set Up</strong>: Open Web UI provides a simple interface for managing and interacting with local large language models (LLMs).</li> <li><strong>Local Model Hosting</strong>: Ollama allows you to host models locally, reducing dependency on external services and ensuring full control over your data.</li> <li><strong>User-Friendly Interface</strong>: Open Web UI offers a straightforward graphical interface to interact with the models and adjust settings.</li> <li><strong>Multiple Model Support</strong>: Ollama enables you to run multiple LLMs locally, allowing you to switch between different models based on your needs.</li> <li><strong>Customizable</strong>: You can fine-tune models locally or switch between different versions without hassle.</li> <li><strong>Efficient Resource Usage</strong>: Both Open Web UI and Ollama are designed to run efficiently on local hardware, ensuring that even with limited resources, you can still run powerful LLMs.</li> </ul> <blockquote> <p><a href="https://docs.openwebui.com">Open WebUI Documentation</a> and <a href="https://ollama.com/">Ollama Documentation</a> provide detailed installation and usage instructions.</p> </blockquote> <h4 id="use-cases-for-open-web-ui-and-ollama">Use Cases for Open Web UI and Ollama</h4> <ul> <li><strong>Personalized AI Assistants</strong>: Run LLMs locally for creating customized personal assistants for various tasks, such as scheduling, reminders, or content generation.</li> <li><strong>Data Privacy</strong>: Host LLMs locally to ensure sensitive data does not leave your machine, offering more control and privacy.</li> <li><strong>Experimentation and Development</strong>: Developers can experiment with different LLMs, fine-tune models, or test different configurations without depending on cloud services.</li> <li><strong>Prototyping and Research</strong>: Ideal for researchers and academics who need to experiment with large language models for various NLP tasks.</li> </ul> <blockquote> <p>‚ÄúOpen Web UI and Ollama together make it easy to run and manage powerful LLMs locally, enabling you to explore the full potential of AI on your own hardware.‚Äù</p> </blockquote> <h4 id="installation-guide-for-open-web-ui-and-ollama-with-docker">Installation Guide for Open Web UI and Ollama with Docker</h4> <ol> <li> <p><strong>Quick Start with Docker</strong>:</p> <ul> <li> <p><strong>If Ollama is on your computer</strong>:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker run <span class="nt">-d</span> <span class="nt">-p</span> 3000:8080 <span class="nt">--add-host</span><span class="o">=</span>host.docker.internal:host-gateway <span class="nt">-v</span> open-webui:/app/backend/data <span class="nt">--name</span> open-webui <span class="nt">--restart</span> always ghcr.io/open-webui/open-webui:main
</code></pre></div> </div> </li> <li> <p><strong>To run Open WebUI with Nvidia GPU suport</strong>:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker run <span class="nt">-d</span> <span class="nt">-p</span> 3000:8080 <span class="nt">--gpus</span> all <span class="nt">--add-host</span><span class="o">=</span>host.docker.internal:host-gateway <span class="nt">-v</span> open-webui:/app/backend/data <span class="nt">--name</span> open-webui <span class="nt">--restart</span> always ghcr.io/open-webui/open-webui:cudadocker run <span class="nt">-d</span> <span class="nt">-p</span> 3000:8080 <span class="nt">--gpus</span> all <span class="nt">--add-host</span><span class="o">=</span>host.docker.internal:host-gateway <span class="nt">-v</span> open-webui:/app/backend/data <span class="nt">--name</span> open-webui <span class="nt">--restart</span> always ghcr.io/open-webui/open-webui:cuda
</code></pre></div> </div> </li> </ul> </li> <li> <p><strong>Open WebUI bundled with Ollama</strong>:</p> <ul> <li><strong>With GPU Support</strong>: <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker run <span class="nt">-d</span> <span class="nt">-p</span> 3000:8080 <span class="nt">--gpus</span><span class="o">=</span>all <span class="nt">-v</span> ollama:/root/.ollama <span class="nt">-v</span> open-webui:/app/backend/data <span class="nt">--name</span> open-webui <span class="nt">--restart</span> always ghcr.io/open-webui/open-webui:ollama
</code></pre></div> </div> </li> <li><strong>CPU Only</strong> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker run <span class="nt">-d</span> <span class="nt">-p</span> 3000:8080 <span class="nt">-v</span> ollama:/root/.ollama <span class="nt">-v</span> open-webui:/app/backend/data <span class="nt">--name</span> open-webui <span class="nt">--restart</span> always ghcr.io/open-webui/open-webui:ollama
</code></pre></div> </div> </li> </ul> <p>üîó After running the above, your WebUI should be available at <code class="language-plaintext highlighter-rouge">http://localhost:8080</code>.</p> </li> </ol> <h3 id="troubleshooting">Troubleshooting</h3> <ol> <li><a href="https://github.com/open-webui/open-webui/discussions/4376">Issue with Open Web UI not listing the models of Ollama</a></li> </ol> <p>If you‚Äôre seeing a connection error when trying to access Ollama, it might be because the WebUI docker container can‚Äôt talk to the Ollama server running on your host. Let‚Äôs fix that:</p> <p>Adjust the Network Settings üõ†Ô∏è: Use the ‚Äìnetwork=host flag in your Docker command. This links your container directly to your host‚Äôs network.</p> <p>Change the Port: Remember that the internal port changes from 3000 to 8080.</p> <p>Example Docker Command:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker run <span class="nt">-d</span> <span class="nt">--network</span><span class="o">=</span>host <span class="nt">-v</span> open-webui:/app/backend/data <span class="nt">-e</span> <span class="nv">OLLAMA_BASE_URL</span><span class="o">=</span>http://127.0.0.1:11434 <span class="nt">--name</span> open-webui <span class="nt">--restart</span> always ghcr.io/open-webui/open-webui:main
</code></pre></div></div> <p>or</p> <p>Pass a different port to the container e.g <code class="language-plaintext highlighter-rouge">-e PORT=48080</code></p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker run <span class="nt">-d</span> <span class="nt">-e</span> <span class="nv">PORT</span><span class="o">=</span>48080 <span class="nt">--network</span><span class="o">=</span>host <span class="nt">-v</span> open-webui:/app/backend/data <span class="nt">-e</span> <span class="nv">OLLAMA_BASE_URL</span><span class="o">=</span>http://127.0.0.1:11434 <span class="nt">--name</span> open-webui <span class="nt">--restart</span> always ghcr.io/open-webui/open-webui:main
</code></pre></div></div> <p>üîó After running the above, your WebUI should be available at <code class="language-plaintext highlighter-rouge">http://localhost:48080</code>.</p>]]></content><author><name></name></author><category term="llm"/><category term="ollama"/><category term="open-webui"/><category term="ai"/><summary type="html"><![CDATA[Open Web UI and Ollama Ubuntu setup guide]]></summary></entry><entry><title type="html">Intro to GCP Cloud Shell and gcloud</title><link href="https://judahsan.github.io/blog/2024/cloud-shell-gcloud/" rel="alternate" type="text/html" title="Intro to GCP Cloud Shell and gcloud"/><published>2024-10-20T10:00:00+00:00</published><updated>2024-10-20T10:00:00+00:00</updated><id>https://judahsan.github.io/blog/2024/cloud-shell-gcloud</id><content type="html" xml:base="https://judahsan.github.io/blog/2024/cloud-shell-gcloud/"><![CDATA[<p>Part of <a href="https://www.cloudskillsboost.google/course_templates/621/labs/403398">Google Cloud Skills Boost</a> labs</p> <h4 id="gcloud-and-cloud-shell">Gcloud and Cloud Shell</h4> <p>Google Cloud Shell is an online, browser-based command-line environment provided by Google Cloud Platform. It is a Debian-based virtual machine with a persistent 5 GB home directory, allowing users to manage their GCP resources and projects directly from their web browser.</p> <blockquote> <p><a href="https://en.wikipedia.org/wiki/Google_Cloud_Shell">Wikipedia</a></p> </blockquote> <h3 id="1-create-gcp-account">1. <a href="https://www.geeksforgeeks.org/how-to-create-a-free-tier-account-on-gcp/">Create GCP account</a></h3> <h3 id="2-activate-cloud-shell">2. Activate Cloud Shell</h3> <ul> <li>Click <strong>Activate Cloud Shell</strong> at the top of the Google Cloud console: Vite utilizes ESBuild, a Go-based bundler, for production builds. ESBuild is renowned for its incredible speed and efficiency.</li> <li>List the active account name</li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    gcloud auth list 
</code></pre></div></div> <p>Ouput:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ACTIVE: <span class="k">*</span>
ACCOUNT: &lt;account name&gt;

To <span class="nb">set </span>the active account, run:
    <span class="nv">$ </span>gcloud config <span class="nb">set </span>account <span class="sb">`</span>ACCOUNT<span class="sb">`</span>
</code></pre></div></div> <ul> <li>List the project ID:</li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gcloud config list project
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>core]
project <span class="o">=</span> qwiklabs-gcp-03-e98c139c8c35
</code></pre></div></div> <h3 id="3-configure-your-environment">3. Configure your environment</h3> <ul> <li><a href="https://cloud.google.com/compute/docs/regions-zones/">Region and zones reading</a></li> </ul> <ol> <li>Set the region to <code class="language-plaintext highlighter-rouge">us-east1</code></li> </ol> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gcloud config <span class="nb">set </span>compute/region us-east1
</code></pre></div></div> <ol> <li>View the project region setting</li> </ol> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gcloud config get-value compute/region
</code></pre></div></div> <ol> <li>Set zone to <code class="language-plaintext highlighter-rouge">us-east1-b</code>:</li> </ol> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gcloud config <span class="nb">set </span>compute/zone us-east1-b
</code></pre></div></div> <ol> <li>View project zone setting.</li> </ol> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gcloud config get-value compute/zone
</code></pre></div></div> <h3 id="4-project-info">4. Project info</h3> <ol> <li>View project ID</li> </ol> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gcloud config get-value project
</code></pre></div></div> <ol> <li>View project details</li> </ol> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gcloud compute project-info describe <span class="nt">--project</span> <span class="si">$(</span>gcloud config get-value project<span class="si">)</span>
</code></pre></div></div> <h3 id="5-setting-environment-variables">5. Setting environment variables</h3> <p>Environment variable define your environment and help save time when you write scripts that contain APIs or executables.</p> <ol> <li>Create an environment variable to store your Project ID.</li> </ol> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">export </span><span class="nv">PROJECT_ID</span><span class="o">=</span><span class="si">$(</span>gcoud config get-value project<span class="si">)</span>
</code></pre></div></div> <ol> <li>Create on to store your Zone</li> </ol> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">export </span><span class="nv">ZONE</span><span class="o">=</span><span class="si">$(</span>gcloud config get-value compute/zone<span class="si">)</span>
</code></pre></div></div> <ol> <li>Verification</li> </ol> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">echo</span> <span class="nt">-e</span> <span class="s2">"PROJECT ID: </span><span class="nv">$PROJECT_ID</span><span class="se">\n</span><span class="s2">ZONE: </span><span class="nv">$ZONE</span><span class="s2">"</span>
</code></pre></div></div> <h3 id="6-create-a-virual-machine-with-gcloud">6. Create a virual machine with gcloud</h3> <ul> <li><code class="language-plaintext highlighter-rouge">gcloud compute</code> allows you to manage your Compute Engine resources in a format that‚Äôs simpler than the Compute Engine API.</li> <li><code class="language-plaintext highlighter-rouge">instances</code> create creates a new instance.</li> <li><code class="language-plaintext highlighter-rouge">gceinstance</code> is the name of the VM.</li> <li>The <code class="language-plaintext highlighter-rouge">--machine-type</code> flag specifies the machine type as e2-medium.</li> <li>The <code class="language-plaintext highlighter-rouge">--zone</code> flag specifies where the VM is created.</li> <li>If you omit the <code class="language-plaintext highlighter-rouge">--zone</code> flag, the gcloud tool can infer your desired zone based on your default properties. Other required instance settings, such as machine type and image, are set to default values if not specified in the create command.</li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gcloud compute instances create gceinstance <span class="nt">--machine-type</span> e2-medium <span class="nt">--zone</span> <span class="nv">$ZONE</span>
</code></pre></div></div> <h3 id="7-exploring-commands">7. Exploring commands</h3> <p>The gcloud tool offers simple usage guidelines that are available by adding the -h flag (for help) onto the end of any gcloud command.</p> <ol> <li>Help command: <code class="language-plaintext highlighter-rouge">gcloud -h</code></li> <li>Verbose help command: <code class="language-plaintext highlighter-rouge">gcloud config --help</code> or <code class="language-plaintext highlighter-rouge">gcloud help config</code> . Type Q and hit Enter to exit</li> </ol> <p>There are global flags in gcloud that govern the behavior of commands on a per-invocation level. Flags override any values set in SDK properties.</p> <ol> <li>View the list of configurations in your environment: <code class="language-plaintext highlighter-rouge">gcloud config list</code></li> <li>See all properties and their settings: <code class="language-plaintext highlighter-rouge">gcloud config list --all</code></li> <li>List your components: <code class="language-plaintext highlighter-rouge">gcloud component lists</code> This displays the <code class="language-plaintext highlighter-rouge">gcloud</code> components that are ready for use.</li> </ol> <h3 id="8-filtering-command-line-output">8. Filtering command-line output</h3> <p>Nifty command for displaying specifying information.</p> <ol> <li>List the gceinstance virtual machine: <code class="language-plaintext highlighter-rouge">gcloud compute instances list --filter="name=('gceinstance')"</code></li> <li>List the firewall rules for the default network: <code class="language-plaintext highlighter-rouge">gcloud compute firewall-rules list --filter="network='default'"</code></li> <li>List the firewall rules for the default network where the allow rule matches an ICMP rule: <code class="language-plaintext highlighter-rouge">gcloud compute firewall-rules list --filter="NETWORK:'default' AND ALLOW:'icmp'"</code></li> </ol> <h3 id="9-connecting-to-your-vm-instance">9. Connecting to your VM instance</h3> <ol> <li>Connect to the VM using ssh: <code class="language-plaintext highlighter-rouge">gcloud compute ssh gceinstance --zone $ZONE</code></li> <li>Type <code class="language-plaintext highlighter-rouge">Y</code> to continue</li> <li>Press <code class="language-plaintext highlighter-rouge">Enter</code> twice to leave the passphrase empty</li> <li>Install nginx: <code class="language-plaintext highlighter-rouge">sudo apt install -y nginx</code></li> <li>Disconnect from SSH: <code class="language-plaintext highlighter-rouge">exit</code></li> </ol> <h3 id="10-update-firewall-rules">10. Update firewall rules</h3> <ol> <li>List the project‚Äôs firewall rules: <code class="language-plaintext highlighter-rouge">gcloud compute firewall-rules list</code></li> <li>Try accessing the nginx service running on the <code class="language-plaintext highlighter-rouge">gceinstance</code> virtual machine</li> </ol> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>

Note: Communication with the virtual machine will fail as it does not have an appropriate firewall rule. The nginx web server is expecting to communicate on tcp:80. To get communication working you need to:

    Add a tag to the gcelab2 virtual machine
    Add a firewall rule for http traffic


</code></pre></div></div> <ol> <li> <p>Add a tag to the virtual machine: <code class="language-plaintext highlighter-rouge">gcloud compute instances add-tags gcelab2 --tags http-server,https-server</code></p> </li> <li>Update the firewall rule to allow: <code class="language-plaintext highlighter-rouge">gcloud compute firewall-rules create default-allow-http --direction=INGRESS --priority=1000 --network=default --action=ALLOW --rules=tcp:80 --source-ranges=0.0.0.0/0 --target-tags=http-server</code></li> <li>List the firewall rules for the project: <code class="language-plaintext highlighter-rouge">gcloud compute firewall-rules list --filter=ALLOW:'80'</code></li> <li>Verify communication is possible for http to the VM:</li> </ol> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl http://$(gcloud compute instances list --filter=name:gcelab2 --format='value(EXTERNAL_IP)')
</code></pre></div></div> <h3 id="10-logs">10. Logs</h3> <p>Viewing logs is essential to understanding the working of your project. Use gcloud to access the different logs available on Google Cloud.</p> <ol> <li>View available logs on the system: <code class="language-plaintext highlighter-rouge">gcloud logging logs list</code></li> <li>View logs that relate to compute resources: <code class="language-plaintext highlighter-rouge">gcloud logging logs list --filter="compute"</code></li> <li>Read Logs related to the resource type of gce_instance:<code class="language-plaintext highlighter-rouge">gcloud logging read "resource.type=gce_instance" --limit 5</code></li> <li>Read the logs for a specific virtual machine: <code class="language-plaintext highlighter-rouge">gcloud logging read "resource.type=gce_instance AND labels.instance_name='gcelab2'" --limit 5</code></li> </ol>]]></content><author><name></name></author><category term="technology"/><category term="gcp"/><summary type="html"><![CDATA[Learn how to connect to computing resources hosted on Google Cloud via Cloud Shell with the gcloud tool.]]></summary></entry><entry><title type="html">Google Kubernetes Engine</title><link href="https://judahsan.github.io/blog/2024/kubernetes-engine/" rel="alternate" type="text/html" title="Google Kubernetes Engine"/><published>2024-10-20T10:00:00+00:00</published><updated>2024-10-20T10:00:00+00:00</updated><id>https://judahsan.github.io/blog/2024/kubernetes-engine</id><content type="html" xml:base="https://judahsan.github.io/blog/2024/kubernetes-engine/"><![CDATA[<p>Part of <a href="https://www.cloudskillsboost.google/course_templates/621/labs/403399">Google Cloud Skills Boost</a> labs</p> <h3 id="google-kubernetes-enginegke">Google Kubernetes Engine(GKE)</h3> <ul> <li> <p><code class="language-plaintext highlighter-rouge">Kubernetes</code> is an open source system for automating deployment, scaling, and management of containerized applications.</p> </li> <li> <p><code class="language-plaintext highlighter-rouge">Google Kubernetes Engine(GKE)</code> is a fully managed Kubernetes service with full Kubernetes API, 4-way autoscaling, release channels, and multi-cluster support.</p> </li> <li> <p>We‚Äôll learn how to create a GKE cluster, deploy an application to the cluster and delete the cluster</p> </li> </ul> <h3 id="1-create-gcp-account">1. <a href="https://www.geeksforgeeks.org/how-to-create-a-free-tier-account-on-gcp/">Create GCP account</a></h3> <h3 id="2-activate-cloud-shell">2. Activate Cloud Shell</h3> <ul> <li>Click <strong>Activate Cloud Shell</strong> at the top of the Google Cloud console: Vite utilizes ESBuild, a Go-based bundler, for production builds. ESBuild is renowned for its incredible speed and efficiency.</li> <li>List the active account name</li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    gcloud auth list 
</code></pre></div></div> <p>Ouput:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ACTIVE: <span class="k">*</span>
ACCOUNT: &lt;account name&gt;

To <span class="nb">set </span>the active account, run:
    <span class="nv">$ </span>gcloud config <span class="nb">set </span>account <span class="sb">`</span>ACCOUNT<span class="sb">`</span>
</code></pre></div></div> <ul> <li>List the project ID:</li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gcloud config list project
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>core]
project <span class="o">=</span> qwiklabs-gcp-03-e98c139c8c35
</code></pre></div></div> <h3 id="3-configure-your-environment">3. Configure your environment</h3> <ul> <li><a href="https://cloud.google.com/compute/docs/regions-zones/">Region and zones reading</a></li> </ul> <ol> <li>Set the region to <code class="language-plaintext highlighter-rouge">us-east1</code></li> </ol> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gcloud config <span class="nb">set </span>compute/region us-east1
</code></pre></div></div> <ol> <li>View the project region setting</li> </ol> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gcloud config get-value compute/region
</code></pre></div></div> <ol> <li>Set zone to <code class="language-plaintext highlighter-rouge">us-east1-b</code>:</li> </ol> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gcloud config <span class="nb">set </span>compute/zone us-east1-b
</code></pre></div></div> <ol> <li>View project zone setting.</li> </ol> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gcloud config get-value compute/zone
</code></pre></div></div> <h3 id="4-create-a-gke-cluster">4. Create a GKE cluster</h3> <p>A <a href="https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-architecture">cluster</a> consists of at least one <strong>cluster master</strong> and multiple worker machines called <strong>nodes</strong>. Nodes are <a href="https://cloud.google.com/compute/docs/instances/">Computer Engine virtual machine instances</a> that run the Kubernetes processes necessary to make them part of the cluster.</p> <ul> <li>Create a cluster: <code class="language-plaintext highlighter-rouge">gcloud container clusters create --machine-type=e2-medium --zone=ZONE lab-cluster</code></li> </ul> <h3 id="5-get-authentication-credentials-for-the-cluster">5. Get authentication credentials for the cluster</h3> <ul> <li>You need authentication credentials to interact with the cluster.</li> <li>Authenticate with the cluster: <code class="language-plaintext highlighter-rouge">gcloud container clusters get-credentials lab-cluster</code></li> </ul> <h3 id="6-deploy-an-app-to-the-cluster">6. Deploy an app to the cluster</h3> <ul> <li>Example: deploy and run the hello-app in the cluster</li> </ul> <ol> <li>Run the following <code class="language-plaintext highlighter-rouge">kubectl create</code> command to <code class="language-plaintext highlighter-rouge">create a new Deployment</code> <code class="language-plaintext highlighter-rouge">hello-server</code> from the hello-app container image</li> </ol> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kubectl create deployment hello-server <span class="nt">--image</span><span class="o">=</span>gcr.io/google-samples/hello-app:1.0
</code></pre></div></div> <ol> <li>Create a <code class="language-plaintext highlighter-rouge">Kubernetes Service</code>, a k8s resource that lets you expose your application to external traffic, using the following <code class="language-plaintext highlighter-rouge">kubectl expose</code> command.</li> </ol> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kubectl expose deployment hello-server <span class="nt">--type</span><span class="o">=</span>loadBalancer <span class="nt">--port</span> 8080
</code></pre></div></div> <ol> <li> <p>Run <code class="language-plaintext highlighter-rouge">kubectl get</code> command to inspect the <code class="language-plaintext highlighter-rouge">hello-server</code>: <code class="language-plaintext highlighter-rouge">kubectl get service</code></p> </li> <li> <p>View the application from the web browser. <code class="language-plaintext highlighter-rouge">http://[EXTERNAL-IP]:8080</code></p> </li> </ol> <h3 id="7-deleting-the-cluster">7. Deleting the cluster</h3> <ol> <li>Delete the cluster: <code class="language-plaintext highlighter-rouge">gcloud container clusters delete lab-cluster</code></li> <li>When prompted, type <code class="language-plaintext highlighter-rouge">Y</code> to confirm.</li> </ol>]]></content><author><name></name></author><category term="technology"/><category term="gcp"/><category term="k8s"/><summary type="html"><![CDATA[An intro to Google Kubernetes Engine in GCP]]></summary></entry><entry><title type="html">Creating A Build Tool Using Go</title><link href="https://judahsan.github.io/blog/2024/creating-a-build-tool-using-go/" rel="alternate" type="text/html" title="Creating A Build Tool Using Go"/><published>2024-07-28T10:00:00+00:00</published><updated>2024-07-28T10:00:00+00:00</updated><id>https://judahsan.github.io/blog/2024/creating-a-build-tool-using-go</id><content type="html" xml:base="https://judahsan.github.io/blog/2024/creating-a-build-tool-using-go/"><![CDATA[<p>Part of <a href="https://www.linkedin.com/in/katungi/">Daniel Katungi‚Äôs</a> talk during Daytona Developers Club Tour ‚Äò24, Nairobi on Thurdsay July 18th</p> <h4 id="understanding-a-fully-fledged-web-build-toolvite">Understanding a fully-fledged web build tool(Vite)</h4> <p>Vite is a frontend build tool that has revolutionized the development experience by leveraging native ESM capabilities of modern browsers. To fully grasp its power. Core concepts:</p> <ol> <li>Native ESM <ul> <li><strong>Leveraging Browser Capabilities</strong>: Vite takes advantage of the native ESM (EcmaScript Modules) support in modern browsers. It can serve you code directly as ESM modules without the need for bundling during development.</li> <li><strong>Improved Development Experience</strong>: This approach significantly speeds up development because the browser handles module loading efficiently.</li> <li><a href="https://vitejs.dev/guide/why">Why Vite</a></li> <li><a href="https://medium.com/@iboroinyang01/bundle-up-vite-or-webpack-c260915e0ff7">Bundle Up? Vite or Webpack?</a></li> </ul> </li> <li>ESBuild <ul> <li><strong>High-Performance Builder</strong>: Vite utilizes ESBuild, a Go-based bundler, for production builds. ESBuild is renowned for its incredible speed and efficiency.</li> <li><strong>Optimized Output</strong>: It produces highly optimized bundles, resulting in faster load times for your application.</li> <li><a href="https://vitejs.dev/guide/">Getting started with Vite</a></li> </ul> </li> <li>Dependency Pre-Bundling <ul> <li><strong>Optimized Import Paths</strong>: Vite pre-bundles large dependency libraries into chunks to reduce the number of requests and improve load performance.</li> <li><strong>Faster Development</strong>: This optimization helps in faster development by avoiding unnecessary re-bundling during development.</li> <li><a href="https://vitejs.dev/guide/dep-pre-bundling">Dependency Pre-Bundling</a></li> </ul> </li> <li>Hot Module Replacement (HMR) <ul> <li><strong>Instant Updates</strong>: Vite implements HMR to enable rapid development by updating only the changed modules in the browser without a full page reload.</li> <li><strong>Improved Developer Experience</strong>: This significantly enhances the development workflow by providing instant feedback on code changes.</li> </ul> </li> <li>Plugin System <ul> <li><strong>Extensibility</strong>: Vite offers a flexible plugin system that allows developers to customize the build process to fit their specific needs.</li> <li><strong>Rich Ecosystem</strong>: There‚Äôs a vast ecosystem of Vite plugins available for various tasks like TypeScript support, CSS preprocessors, and more.</li> <li><a href="https://www.dhiwise.com/post/the-ultimate-guide-to-using-vite-plugin-for-lightning-fast-web-development#:~:text=By%20supporting%20Rollup%20plugins%2C%20Vite,enhancing%20its%20flexibility%20and%20extensibility.">The Ultimate Guide to Using Vite Plugin for Lightning-Fast Web Development</a></li> </ul> </li> </ol> <h4 id="how-it-works">How It Works</h4> <ul> <li><strong>Development Server</strong>: Vite starts a development server that serves your code directly as ESM modules. The browser handles module imports efficiently.</li> <li><strong>HMR</strong>: Vite watches for changes in your code and uses WebSockets to send updates to the browser.1 Only the affected modules are reloaded, providing a fast feedback loop. <a href="https://divriots.com/blog/vite-in-the-browser/#:~:text=Hot%20Module%20Reload%20(HMR),to%20the%20client%20(browser).">Vite In The Browser</a> <a href="https://blog.stackblitz.com/posts/what-is-vite-introduction/#:~:text=Each%20time%20you%20change%20any,their%20effects%20on%20the%20application.">Vite Core Features</a></li> <li><strong>Production Build</strong>: When building for production, Vite uses ESBuild to bundle your code into optimized chunks. Dependency pre-bundling is applied to further improve performance.</li> </ul> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/vite-image.webp-480.webp 480w,/assets/img/vite-image.webp-800.webp 800w,/assets/img/vite-image.webp-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/vite-image.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <blockquote> <p>‚ÄúVite isn‚Äôt just a fast bundler, it‚Äôs a development powerhouse. Native ESM support and Hot Module Replacement (HMR) dramatically accelerate your development workflow, while ESBuild and dependency pre-bundling ensure your production builds fly.‚Äù</p> </blockquote> <h4 id="creating-a-build-tool-using-go">Creating a Build Tool Using Go</h4> <ol> <li><strong>Set Up Your Go Environment:</strong> <ul> <li>Install Go from the official <a href="https://golang.org/dl/">Go website</a>.</li> <li>Create a new Go project directory.</li> </ul> </li> <li><strong>Install Dependencies:</strong> <ul> <li>Run the following commands to install the <code class="language-plaintext highlighter-rouge">minify</code> package and its sub-packages for JavaScript and CSS minification: <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>go get <span class="nt">-u</span> github.com/tdewolff/minify
go get <span class="nt">-u</span> github.com/tdewolff/minify/js
go get <span class="nt">-u</span> github.com/tdewolff/minify/css
</code></pre></div> </div> </li> </ul> </li> <li><strong>Read and Parse Files:</strong> <ul> <li>Use the <code class="language-plaintext highlighter-rouge">os</code> and <code class="language-plaintext highlighter-rouge">io/ioutil</code> packages to read files from the filesystem.</li> </ul> </li> <li><strong>Transpile, Bundle, and Minify Code:</strong> <ul> <li>Use the <code class="language-plaintext highlighter-rouge">minify</code> package to minify JavaScript and CSS files.</li> <li>Bundle multiple JavaScript and CSS modules into a single file.</li> </ul> </li> <li><strong>Serve Files:</strong> <ul> <li>Use the <code class="language-plaintext highlighter-rouge">net/http</code> package to serve files during development.</li> <li>Implement a simple server that watches for file changes and reloads the browser.</li> </ul> </li> <li><strong>Command-Line Interface (CLI):</strong> <ul> <li>Create a CLI using the <code class="language-plaintext highlighter-rouge">flag</code> package to provide options for building, serving, and watching files.</li> </ul> </li> </ol> <p>Here is the complete code for the build tool:</p> <div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">package</span> <span class="n">main</span>

<span class="k">import</span> <span class="p">(</span>
    <span class="s">"flag"</span>
    <span class="s">"fmt"</span>
    <span class="s">"io/ioutil"</span>
    <span class="s">"net/http"</span>
    <span class="s">"os"</span>
    <span class="s">"path/filepath"</span>
    <span class="s">"strings"</span>

    <span class="s">"github.com/tdewolff/minify"</span>
    <span class="s">"github.com/tdewolff/minify/css"</span>
    <span class="s">"github.com/tdewolff/minify/js"</span>
<span class="p">)</span>

<span class="k">func</span> <span class="n">main</span><span class="p">()</span> <span class="p">{</span>
    <span class="c">// Define CLI flags</span>
    <span class="n">build</span> <span class="o">:=</span> <span class="n">flag</span><span class="o">.</span><span class="n">Bool</span><span class="p">(</span><span class="s">"build"</span><span class="p">,</span> <span class="no">false</span><span class="p">,</span> <span class="s">"Build the project"</span><span class="p">)</span>
    <span class="n">serve</span> <span class="o">:=</span> <span class="n">flag</span><span class="o">.</span><span class="n">Bool</span><span class="p">(</span><span class="s">"serve"</span><span class="p">,</span> <span class="no">false</span><span class="p">,</span> <span class="s">"Serve the project"</span><span class="p">)</span>
    <span class="n">flag</span><span class="o">.</span><span class="n">Parse</span><span class="p">()</span>

    <span class="k">if</span> <span class="o">*</span><span class="n">build</span> <span class="p">{</span>
        <span class="n">buildProject</span><span class="p">()</span>
    <span class="p">}</span>

    <span class="k">if</span> <span class="o">*</span><span class="n">serve</span> <span class="p">{</span>
        <span class="n">serveProject</span><span class="p">()</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="k">func</span> <span class="n">buildProject</span><span class="p">()</span> <span class="p">{</span>
    <span class="c">// Initialize minifier</span>
    <span class="n">m</span> <span class="o">:=</span> <span class="n">minify</span><span class="o">.</span><span class="n">New</span><span class="p">()</span>
    <span class="n">m</span><span class="o">.</span><span class="n">AddFunc</span><span class="p">(</span><span class="s">"text/javascript"</span><span class="p">,</span> <span class="n">js</span><span class="o">.</span><span class="n">Minify</span><span class="p">)</span>
    <span class="n">m</span><span class="o">.</span><span class="n">AddFunc</span><span class="p">(</span><span class="s">"text/css"</span><span class="p">,</span> <span class="n">css</span><span class="o">.</span><span class="n">Minify</span><span class="p">)</span>

    <span class="c">// Read and concatenate JavaScript and CSS files</span>
    <span class="n">files</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">ioutil</span><span class="o">.</span><span class="n">ReadDir</span><span class="p">(</span><span class="s">"./src"</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">err</span> <span class="o">!=</span> <span class="no">nil</span> <span class="p">{</span>
        <span class="n">fmt</span><span class="o">.</span><span class="n">Println</span><span class="p">(</span><span class="s">"Error reading source directory:"</span><span class="p">,</span> <span class="n">err</span><span class="p">)</span>
        <span class="k">return</span>
    <span class="p">}</span>

    <span class="k">var</span> <span class="n">bundledCode</span> <span class="n">strings</span><span class="o">.</span><span class="n">Builder</span>
    <span class="k">for</span> <span class="n">_</span><span class="p">,</span> <span class="n">file</span> <span class="o">:=</span> <span class="k">range</span> <span class="n">files</span> <span class="p">{</span>
        <span class="n">content</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">ioutil</span><span class="o">.</span><span class="n">ReadFile</span><span class="p">(</span><span class="s">"./src/"</span> <span class="o">+</span> <span class="n">file</span><span class="o">.</span><span class="n">Name</span><span class="p">())</span>
        <span class="k">if</span> <span class="n">err</span> <span class="o">!=</span> <span class="no">nil</span> <span class="p">{</span>
            <span class="n">fmt</span><span class="o">.</span><span class="n">Println</span><span class="p">(</span><span class="s">"Error reading file:"</span><span class="p">,</span> <span class="n">err</span><span class="p">)</span>
            <span class="k">return</span>
        <span class="p">}</span>

        <span class="k">var</span> <span class="n">minifiedContent</span> <span class="kt">string</span>
        <span class="k">if</span> <span class="n">strings</span><span class="o">.</span><span class="n">HasSuffix</span><span class="p">(</span><span class="n">file</span><span class="o">.</span><span class="n">Name</span><span class="p">(),</span> <span class="s">".js"</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">minifiedContent</span><span class="p">,</span> <span class="n">err</span> <span class="o">=</span> <span class="n">m</span><span class="o">.</span><span class="n">String</span><span class="p">(</span><span class="s">"text/javascript"</span><span class="p">,</span> <span class="kt">string</span><span class="p">(</span><span class="n">content</span><span class="p">))</span>
        <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="n">strings</span><span class="o">.</span><span class="n">HasSuffix</span><span class="p">(</span><span class="n">file</span><span class="o">.</span><span class="n">Name</span><span class="p">(),</span> <span class="s">".css"</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">minifiedContent</span><span class="p">,</span> <span class="n">err</span> <span class="o">=</span> <span class="n">m</span><span class="o">.</span><span class="n">String</span><span class="p">(</span><span class="s">"text/css"</span><span class="p">,</span> <span class="kt">string</span><span class="p">(</span><span class="n">content</span><span class="p">))</span>
        <span class="p">}</span>

        <span class="k">if</span> <span class="n">err</span> <span class="o">!=</span> <span class="no">nil</span> <span class="p">{</span>
            <span class="n">fmt</span><span class="o">.</span><span class="n">Println</span><span class="p">(</span><span class="s">"Error minifying file:"</span><span class="p">,</span> <span class="n">err</span><span class="p">)</span>
            <span class="k">return</span>
        <span class="p">}</span>

        <span class="n">bundledCode</span><span class="o">.</span><span class="n">WriteString</span><span class="p">(</span><span class="n">minifiedContent</span><span class="p">)</span>
    <span class="p">}</span>

    <span class="c">// Ensure the dist directory exists</span>
    <span class="n">err</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">MkdirAll</span><span class="p">(</span><span class="s">"./dist"</span><span class="p">,</span> <span class="n">os</span><span class="o">.</span><span class="n">ModePerm</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">err</span> <span class="o">!=</span> <span class="no">nil</span> <span class="p">{</span>
        <span class="n">fmt</span><span class="o">.</span><span class="n">Println</span><span class="p">(</span><span class="s">"Error creating dist directory:"</span><span class="p">,</span> <span class="n">err</span><span class="p">)</span>
        <span class="k">return</span>
    <span class="p">}</span>

    <span class="c">// Write the bundled and minified code to a file</span>
    <span class="n">err</span> <span class="o">=</span> <span class="n">ioutil</span><span class="o">.</span><span class="n">WriteFile</span><span class="p">(</span><span class="s">"./dist/bundle.js"</span><span class="p">,</span> <span class="p">[]</span><span class="kt">byte</span><span class="p">(</span><span class="n">bundledCode</span><span class="o">.</span><span class="n">String</span><span class="p">()),</span> <span class="m">0644</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">err</span> <span class="o">!=</span> <span class="no">nil</span> <span class="p">{</span>
        <span class="n">fmt</span><span class="o">.</span><span class="n">Println</span><span class="p">(</span><span class="s">"Error writing bundled file:"</span><span class="p">,</span> <span class="n">err</span><span class="p">)</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="n">fmt</span><span class="o">.</span><span class="n">Println</span><span class="p">(</span><span class="s">"Project built successfully."</span><span class="p">)</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="k">func</span> <span class="n">serveProject</span><span class="p">()</span> <span class="p">{</span>
    <span class="n">http</span><span class="o">.</span><span class="n">Handle</span><span class="p">(</span><span class="s">"/"</span><span class="p">,</span> <span class="n">http</span><span class="o">.</span><span class="n">FileServer</span><span class="p">(</span><span class="n">http</span><span class="o">.</span><span class="n">Dir</span><span class="p">(</span><span class="s">"./dist"</span><span class="p">)))</span>
    <span class="n">fmt</span><span class="o">.</span><span class="n">Println</span><span class="p">(</span><span class="s">"Serving project at http://localhost:8080"</span><span class="p">)</span>
    <span class="n">http</span><span class="o">.</span><span class="n">ListenAndServe</span><span class="p">(</span><span class="s">":8080"</span><span class="p">,</span> <span class="no">nil</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div></div> <h3 id="steps-to-use-the-build-tool">Steps to Use the Build Tool</h3> <ol> <li><strong>Build the Project:</strong> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>go run main.go <span class="nt">-build</span>
</code></pre></div> </div> </li> <li><strong>Serve the Project:</strong> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>go run main.go <span class="nt">-serve</span>
</code></pre></div> </div> </li> </ol>]]></content><author><name></name></author><category term="technology"/><category term="golang"/><category term="vite"/><summary type="html"><![CDATA[Crating a build tool using Go]]></summary></entry><entry><title type="html">Using Tiled with Kaplay</title><link href="https://judahsan.github.io/blog/2024/tiled-kaplay/" rel="alternate" type="text/html" title="Using Tiled with Kaplay"/><published>2024-07-18T23:01:00+00:00</published><updated>2024-07-18T23:01:00+00:00</updated><id>https://judahsan.github.io/blog/2024/tiled-kaplay</id><content type="html" xml:base="https://judahsan.github.io/blog/2024/tiled-kaplay/"><![CDATA[<p>Personal notes from <a href="https://jslegenddev.substack.com/p/how-to-use-tiled-with-kaplayjs">JLegendDev‚Äôs blog post</a></p> <h4 id="prerequisites">Prerequisites:</h4> <ul> <li>Basic knowledge of Kaplay.js and JavaScript</li> <li><a href="(https://www.mapeditor.org/)">Tiled</a> downloaded and installed</li> </ul> <h5 id="assets">Assets:</h5> <ul> <li>A 3 tiles wide x 3 tiles tall map. Download assets <a href="https://github.com/JSLegendDev/Zelda-like-Kaplayjs/blob/master/assets/topdownasset.png">here</a>.</li> <li>Bonus: The assets were used in the <a href="https://www.youtube.com/watch?v=pVAmEJqK-3A">Zelda-like tutorial</a></li> </ul> <h3 id="setting-up-tiled">Setting up Tiled</h3> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/setup1-480.webp 480w,/assets/img/setup1-800.webp 800w,/assets/img/setup1-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/setup1.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <p>Once Tiled is installed, open the program and create a new map like shown in the screenshot above.</p> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/setup2-480.webp 480w,/assets/img/setup2-800.webp 800w,/assets/img/setup2-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/setup2.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <p>Next, set the map size to 3 x 3 and the tile size to 16 x 16 (Since our spritesheet is designed to be tiles of 16 x 16 pixels). Make sure the ‚ÄúFixed‚Äù option is the one selected. Then, click ‚ÄúOK‚Äù.</p> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/setup3-480.webp 480w,/assets/img/setup3-800.webp 800w,/assets/img/setup3-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/setup3.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <p>Now we still need to add our spritesheet so we can start drawing our level. Click on ‚ÄúNew Tileset‚Äù as shown in the screenshot above.</p> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/setup4-480.webp 480w,/assets/img/setup4-800.webp 800w,/assets/img/setup4-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/setup4.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <p>Click on the ‚ÄúBrowse‚Äù button and select the spritesheet image you want to use in your file explorer. Then, click ‚ÄúOK‚Äù.</p> <h3 id="creating-tile-layers">Creating Tile Layers</h3> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/layer-480.webp 480w,/assets/img/layer-800.webp 800w,/assets/img/layer-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/layer.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <p>Rename the default layer named ‚ÄúTile Layer 1‚Äù to ‚ÄúGround‚Äù at the top-right of the editor by double clicking on the current layer name. This will make it editable allowing you to write a new name. Then at the bottom-right where you can see the spritesheet, select the grass tile and start drawing on your grid like shown in the screenshot above. Tip : You can use Ctrl + mouse wheel to zoom in and out.</p> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/layer2-480.webp 480w,/assets/img/layer2-800.webp 800w,/assets/img/layer2-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/layer2.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <p>In Tiled, there two major types of layers you can create. The first one is the ‚ÄúTile Layer‚Äù which is used for drawing tiles. The other one is the ‚ÄúObject Layer‚Äù and is used to set colliders (hitboxes) or spawn positions for your game entities. <br/> By default, Tiled creates a ‚ÄúTile Layer‚Äù as the first layer, that‚Äôs why you were able to draw on the grid previously. Now that you have drawn the ground which is composed of only grass tiles, it‚Äôs time to add a bush. <br/> To do this, create a new ‚ÄúTile Layer‚Äù like shown in the screenshot above and name it ‚ÄúBushes‚Äù.</p> <div class="col-sm row mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/layer3-480.webp 480w,/assets/img/layer3-800.webp 800w,/assets/img/layer3-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/layer3.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <p>Make sure this new layer is placed on top of the ‚ÄúGround‚Äù layer. If not the case by default, you can drag a layer around by holding the left mouse button over the tile layer name. <br/> Finally, draw a bush at the center of the grid like shown in the screenshot. Make sure before you do this to have the ‚ÄúBushes‚Äù layer selected in the Layers inspector (located at the top-right). You can select a layer by clicking on its name.</p> <h3 id="creating-object-layers">Creating Object Layers</h3> <div class="col-sm row mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/obj-480.webp 480w,/assets/img/obj-800.webp 800w,/assets/img/obj-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/obj.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <p>Now that we‚Äôre done with placing our tiles we need to place our colliders. Colliders are static objects that can serve as obstacles or walls in games. The appropriate layer type for this would be an ‚ÄúObject Layer‚Äù because we only care about the position, the height and width of the collider which isn‚Äôt possible to set in a ‚ÄúTile Layer‚Äù. <br/> As shown in the screenshot above, create an ‚ÄúObject Layer‚Äù.</p> <div class="col-sm row mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/obj2-480.webp 480w,/assets/img/obj2-800.webp 800w,/assets/img/obj2-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/obj2.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <p>Rename it to ‚ÄúColliders‚Äù. Names are important because they‚Äôre used to determine what to do with each layer in our code. <br/> Select the rectangle icon at the top-left of the editor (shown in the screenshot above). Draw a square on the grid by clicking and dragging it around to set its size. <br/> If we had 3 bushes aligned, we would draw one long rectangle as the collider instead of 3 squares as it would be better for performance. In Kaplay.js, the more Game Objects are created the less the game remains performant so it‚Äôs important to limit the amount of colliders needed (as much as possible). <br/></p> <div class="col-sm row mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/obj3-480.webp 480w,/assets/img/obj3-800.webp 800w,/assets/img/obj3-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/obj3.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <p>To make things easy, make sure to enable the ‚ÄúSnap to Grid‚Äù option before drawing the rectangle on the grid. This option will make sure the square fits the tile perfectly. It makes things less error prone. You can access this option by going to ‚ÄúView‚Äù &gt; ‚ÄúSnapping‚Äù &gt; ‚ÄúSnap to Grid‚Äù. This is shown in the screenshot above.</p> <div class="col-sm row mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/obj4-480.webp 480w,/assets/img/obj4-800.webp 800w,/assets/img/obj4-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/obj4.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <p>Now, create another ‚ÄúObject Layer‚Äù and name it ‚ÄúPositions‚Äù. This layer will be used to determine where to place our player on the map. Instead of drawing a square like we did for the ‚ÄúColliders‚Äù layer, select the pin icon (at the top-left of the editor) and place a pin at the top-left of the grid. This is where our player will spawn. Using the properties tab on the left, set the name of the pin to be ‚Äúplayer‚Äù. This is useful to know in your code where to place what. For example, you could have pins named ‚Äúspider‚Äù, ‚Äúbear‚Äù, etc‚Ä¶ and for each you would write code to display something different. <br/> Make sure to save your map by going to ‚ÄúFile‚Äù &gt; ‚ÄúSave As‚Ä¶‚Äù. Name the map file as ‚Äúmap.json‚Äù and save it to your project‚Äôs directory.</p> <div class="col-sm row mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/obj5-480.webp 480w,/assets/img/obj5-800.webp 800w,/assets/img/obj5-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/obj5.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <p>In Kaplay, drawing tiles individually using k.drawSprite() calls is less efficient than using Tiled to convert our map into a single image and then displaying it within a sprite component. This might sound strange and it is. In other game libraries, it‚Äôs more efficient to draw tiles individually rather than baking them into an image. I don‚Äôt know how Kaplay implements this, I‚Äôm as puzzled as you. <br/> To convert our tilemap to a single image, first, In the Layers inspector, hide the ‚ÄúPositions‚Äù and ‚ÄúColliders‚Äù layers by clicking on the eye icons as shown in the screenshot above. <br/> Then, go to ‚ÄúFile‚Äù and click on ‚ÄúExport As Image‚Äù.</p> <div class="col-sm row mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/obj6-480.webp 480w,/assets/img/obj6-800.webp 800w,/assets/img/obj6-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/obj6.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <p>A new menu will appear. Set the place where you want to save the image using the ‚ÄúBrowse‚Äù button. Once done, make sure to select the option ‚ÄúOnly include visible layers‚Äù and then click ‚ÄúExport‚Äù.</p> <h3 id="rendering-the-map-in-kaplay">Rendering The map in Kaplay</h3> <p>Your ‚Äúmap.json‚Äù contains all the data needed to to display your map in Kaplay. Not all of the data is useful, so the most important part is the ‚Äúlayers‚Äù property which contains an array of layers. In this project, we only created 3 layers so this array should only have three elements. <br/> As your map grows in size so will this ‚Äúmap.json‚Äù file. That‚Äôs why I kept the map very small so I could paste the entire ‚Äúmap.json‚Äù file here.</p> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w"> </span><span class="nl">"compressionlevel"</span><span class="p">:</span><span class="mi">-1</span><span class="p">,</span><span class="w">
 </span><span class="nl">"height"</span><span class="p">:</span><span class="mi">3</span><span class="p">,</span><span class="w">
 </span><span class="nl">"infinite"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="w">
 </span><span class="nl">"layers"</span><span class="p">:[</span><span class="w">
        </span><span class="p">{</span><span class="w">
         </span><span class="nl">"data"</span><span class="p">:[</span><span class="mi">41</span><span class="p">,</span><span class="w"> </span><span class="mi">41</span><span class="p">,</span><span class="w"> </span><span class="mi">41</span><span class="p">,</span><span class="w">
            </span><span class="mi">41</span><span class="p">,</span><span class="w"> </span><span class="mi">41</span><span class="p">,</span><span class="w"> </span><span class="mi">41</span><span class="p">,</span><span class="w">
            </span><span class="mi">41</span><span class="p">,</span><span class="w"> </span><span class="mi">41</span><span class="p">,</span><span class="w"> </span><span class="mi">41</span><span class="p">],</span><span class="w">
         </span><span class="nl">"height"</span><span class="p">:</span><span class="mi">3</span><span class="p">,</span><span class="w">
         </span><span class="nl">"id"</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span><span class="w">
         </span><span class="nl">"name"</span><span class="p">:</span><span class="s2">"Ground"</span><span class="p">,</span><span class="w">
         </span><span class="nl">"opacity"</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span><span class="w">
         </span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"tilelayer"</span><span class="p">,</span><span class="w">
         </span><span class="nl">"visible"</span><span class="p">:</span><span class="kc">true</span><span class="p">,</span><span class="w">
         </span><span class="nl">"width"</span><span class="p">:</span><span class="mi">3</span><span class="p">,</span><span class="w">
         </span><span class="nl">"x"</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="w">
         </span><span class="nl">"y"</span><span class="p">:</span><span class="mi">0</span><span class="w">
        </span><span class="p">},</span><span class="w"> 
        </span><span class="p">{</span><span class="w">
         </span><span class="nl">"data"</span><span class="p">:[</span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w">
            </span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="mi">161</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w">
            </span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="p">],</span><span class="w">
         </span><span class="nl">"height"</span><span class="p">:</span><span class="mi">3</span><span class="p">,</span><span class="w">
         </span><span class="nl">"id"</span><span class="p">:</span><span class="mi">2</span><span class="p">,</span><span class="w">
         </span><span class="nl">"name"</span><span class="p">:</span><span class="s2">"Bushes"</span><span class="p">,</span><span class="w">
         </span><span class="nl">"opacity"</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span><span class="w">
         </span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"tilelayer"</span><span class="p">,</span><span class="w">
         </span><span class="nl">"visible"</span><span class="p">:</span><span class="kc">true</span><span class="p">,</span><span class="w">
         </span><span class="nl">"width"</span><span class="p">:</span><span class="mi">3</span><span class="p">,</span><span class="w">
         </span><span class="nl">"x"</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="w">
         </span><span class="nl">"y"</span><span class="p">:</span><span class="mi">0</span><span class="w">
        </span><span class="p">},</span><span class="w"> 
        </span><span class="p">{</span><span class="w">
         </span><span class="nl">"draworder"</span><span class="p">:</span><span class="s2">"topdown"</span><span class="p">,</span><span class="w">
         </span><span class="nl">"id"</span><span class="p">:</span><span class="mi">3</span><span class="p">,</span><span class="w">
         </span><span class="nl">"name"</span><span class="p">:</span><span class="s2">"Colliders"</span><span class="p">,</span><span class="w">
         </span><span class="nl">"objects"</span><span class="p">:[</span><span class="w">
                </span><span class="p">{</span><span class="w">
                 </span><span class="nl">"height"</span><span class="p">:</span><span class="mi">16</span><span class="p">,</span><span class="w">
                 </span><span class="nl">"id"</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span><span class="w">
                 </span><span class="nl">"name"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="w">
                 </span><span class="nl">"rotation"</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="w">
                 </span><span class="nl">"type"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="w">
                 </span><span class="nl">"visible"</span><span class="p">:</span><span class="kc">true</span><span class="p">,</span><span class="w">
                 </span><span class="nl">"width"</span><span class="p">:</span><span class="mi">16</span><span class="p">,</span><span class="w">
                 </span><span class="nl">"x"</span><span class="p">:</span><span class="mi">16</span><span class="p">,</span><span class="w">
                 </span><span class="nl">"y"</span><span class="p">:</span><span class="mi">16</span><span class="w">
                </span><span class="p">}],</span><span class="w">
         </span><span class="nl">"opacity"</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span><span class="w">
         </span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"objectgroup"</span><span class="p">,</span><span class="w">
         </span><span class="nl">"visible"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="w">
         </span><span class="nl">"x"</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="w">
         </span><span class="nl">"y"</span><span class="p">:</span><span class="mi">0</span><span class="w">
        </span><span class="p">},</span><span class="w">
    
        </span><span class="p">{</span><span class="w">
         </span><span class="nl">"draworder"</span><span class="p">:</span><span class="s2">"topdown"</span><span class="p">,</span><span class="w">
         </span><span class="nl">"id"</span><span class="p">:</span><span class="mi">4</span><span class="p">,</span><span class="w">
         </span><span class="nl">"name"</span><span class="p">:</span><span class="s2">"Positions"</span><span class="p">,</span><span class="w">
         </span><span class="nl">"objects"</span><span class="p">:[</span><span class="w">
                </span><span class="p">{</span><span class="w">
                 </span><span class="nl">"height"</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="w">
                 </span><span class="nl">"id"</span><span class="p">:</span><span class="mi">3</span><span class="p">,</span><span class="w">
                 </span><span class="nl">"name"</span><span class="p">:</span><span class="s2">"player"</span><span class="p">,</span><span class="w">
                 </span><span class="nl">"point"</span><span class="p">:</span><span class="kc">true</span><span class="p">,</span><span class="w">
                 </span><span class="nl">"rotation"</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="w">
                 </span><span class="nl">"type"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="w">
                 </span><span class="nl">"visible"</span><span class="p">:</span><span class="kc">true</span><span class="p">,</span><span class="w">
                 </span><span class="nl">"width"</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="w">
                 </span><span class="nl">"x"</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="w">
                 </span><span class="nl">"y"</span><span class="p">:</span><span class="mi">0</span><span class="w">
                </span><span class="p">},</span><span class="w"> 
                </span><span class="p">{</span><span class="w">
                 </span><span class="nl">"height"</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="w">
                 </span><span class="nl">"id"</span><span class="p">:</span><span class="mi">4</span><span class="p">,</span><span class="w">
                 </span><span class="nl">"name"</span><span class="p">:</span><span class="s2">"player"</span><span class="p">,</span><span class="w">
                 </span><span class="nl">"point"</span><span class="p">:</span><span class="kc">true</span><span class="p">,</span><span class="w">
                 </span><span class="nl">"rotation"</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="w">
                 </span><span class="nl">"type"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="w">
                 </span><span class="nl">"visible"</span><span class="p">:</span><span class="kc">true</span><span class="p">,</span><span class="w">
                 </span><span class="nl">"width"</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="w">
                 </span><span class="nl">"x"</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="w">
                 </span><span class="nl">"y"</span><span class="p">:</span><span class="mi">0</span><span class="w">
                </span><span class="p">}],</span><span class="w">
         </span><span class="nl">"opacity"</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span><span class="w">
         </span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"objectgroup"</span><span class="p">,</span><span class="w">
         </span><span class="nl">"visible"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="w">
         </span><span class="nl">"x"</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="w">
         </span><span class="nl">"y"</span><span class="p">:</span><span class="mi">0</span><span class="w">
        </span><span class="p">}],</span><span class="w">
 </span><span class="nl">"nextlayerid"</span><span class="p">:</span><span class="mi">5</span><span class="p">,</span><span class="w">
 </span><span class="nl">"nextobjectid"</span><span class="p">:</span><span class="mi">5</span><span class="p">,</span><span class="w">
 </span><span class="nl">"orientation"</span><span class="p">:</span><span class="s2">"orthogonal"</span><span class="p">,</span><span class="w">
 </span><span class="nl">"renderorder"</span><span class="p">:</span><span class="s2">"right-down"</span><span class="p">,</span><span class="w">
 </span><span class="nl">"tiledversion"</span><span class="p">:</span><span class="s2">"1.10.2"</span><span class="p">,</span><span class="w">
 </span><span class="nl">"tileheight"</span><span class="p">:</span><span class="mi">16</span><span class="p">,</span><span class="w">
 </span><span class="nl">"tilesets"</span><span class="p">:[</span><span class="w">
        </span><span class="p">{</span><span class="w">
         </span><span class="nl">"columns"</span><span class="p">:</span><span class="mi">39</span><span class="p">,</span><span class="w">
         </span><span class="nl">"firstgid"</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span><span class="w">
         </span><span class="nl">"image"</span><span class="p">:</span><span class="s2">"topdownasset.png"</span><span class="p">,</span><span class="w">
         </span><span class="nl">"imageheight"</span><span class="p">:</span><span class="mi">496</span><span class="p">,</span><span class="w">
         </span><span class="nl">"imagewidth"</span><span class="p">:</span><span class="mi">624</span><span class="p">,</span><span class="w">
         </span><span class="nl">"margin"</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="w">
         </span><span class="nl">"name"</span><span class="p">:</span><span class="s2">"topdownasset"</span><span class="p">,</span><span class="w">
         </span><span class="nl">"spacing"</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="w">
         </span><span class="nl">"tilecount"</span><span class="p">:</span><span class="mi">1209</span><span class="p">,</span><span class="w">
         </span><span class="nl">"tileheight"</span><span class="p">:</span><span class="mi">16</span><span class="p">,</span><span class="w">
         </span><span class="nl">"tilewidth"</span><span class="p">:</span><span class="mi">16</span><span class="w">
        </span><span class="p">}],</span><span class="w">
 </span><span class="nl">"tilewidth"</span><span class="p">:</span><span class="mi">16</span><span class="p">,</span><span class="w">
 </span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"map"</span><span class="p">,</span><span class="w">
 </span><span class="nl">"version"</span><span class="p">:</span><span class="s2">"1.10"</span><span class="p">,</span><span class="w">
 </span><span class="nl">"width"</span><span class="p">:</span><span class="mi">3</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div> <p>Assuming you know how to setup Kaplay, here is the code you need to be able to display the map.</p> <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nx">kaplay</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">./lib/kaplay.mjs</span><span class="dl">"</span><span class="p">;</span>

<span class="kd">const</span> <span class="nx">k</span> <span class="o">=</span> <span class="nf">kaplay</span><span class="p">({</span> <span class="na">global</span><span class="p">:</span> <span class="kc">false</span> <span class="p">});</span>

<span class="nx">k</span><span class="p">.</span><span class="nf">loadSprite</span><span class="p">(</span><span class="dl">"</span><span class="s2">spritesheet</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">./topdownasset.png</span><span class="dl">"</span><span class="p">,</span> <span class="p">{</span>
  <span class="na">sliceX</span><span class="p">:</span> <span class="mi">39</span><span class="p">,</span>
  <span class="na">sliceY</span><span class="p">:</span> <span class="mi">31</span><span class="p">,</span>
<span class="p">});</span> <span class="c1">// this is needed for the player animations </span>
<span class="c1">// This because the tiles + player sprites are in the same image </span>
<span class="c1">// If they were separate, we wouldn't need to load the tilesheet as the exported "map.png" would be enough</span>

<span class="nx">k</span><span class="p">.</span><span class="nf">loadSprite</span><span class="p">(</span><span class="dl">"</span><span class="s2">map</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">./map.png</span><span class="dl">"</span><span class="p">);</span>

<span class="k">async</span> <span class="kd">function</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">mapData</span> <span class="o">=</span> <span class="k">await </span><span class="p">(</span><span class="k">await</span> <span class="nf">fetch</span><span class="p">(</span><span class="dl">"</span><span class="s2">./map.json</span><span class="dl">"</span><span class="p">)).</span><span class="nf">json</span><span class="p">();</span>
  <span class="kd">const</span> <span class="nx">map</span> <span class="o">=</span> <span class="nx">k</span><span class="p">.</span><span class="nf">add</span><span class="p">([</span><span class="nx">k</span><span class="p">.</span><span class="nf">pos</span><span class="p">(</span><span class="mi">100</span><span class="p">,</span> <span class="mi">100</span><span class="p">)]);</span>
  <span class="nx">k</span><span class="p">.</span><span class="nf">camPos</span><span class="p">(</span><span class="nx">map</span><span class="p">.</span><span class="nx">pos</span><span class="p">);</span>
  <span class="nx">k</span><span class="p">.</span><span class="nf">camScale</span><span class="p">(</span><span class="mi">8</span><span class="p">);</span>

  <span class="nx">map</span><span class="p">.</span><span class="nf">add</span><span class="p">([</span><span class="nx">k</span><span class="p">.</span><span class="nf">sprite</span><span class="p">(</span><span class="dl">"</span><span class="s2">map</span><span class="dl">"</span><span class="p">)]);</span>

  <span class="k">for </span><span class="p">(</span><span class="kd">const</span> <span class="nx">layer</span> <span class="k">of</span> <span class="nx">mapData</span><span class="p">.</span><span class="nx">layers</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if </span><span class="p">(</span><span class="nx">layer</span><span class="p">.</span><span class="nx">type</span> <span class="o">===</span> <span class="dl">"</span><span class="s2">tilelayer</span><span class="dl">"</span><span class="p">)</span> <span class="k">continue</span><span class="p">;</span>

    <span class="k">if </span><span class="p">(</span><span class="nx">layer</span><span class="p">.</span><span class="nx">name</span> <span class="o">===</span> <span class="dl">"</span><span class="s2">Colliders</span><span class="dl">"</span><span class="p">)</span> <span class="p">{</span>
      <span class="k">for </span><span class="p">(</span><span class="kd">const</span> <span class="nx">object</span> <span class="k">of</span> <span class="nx">layer</span><span class="p">.</span><span class="nx">objects</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">map</span><span class="p">.</span><span class="nf">add</span><span class="p">([</span>
          <span class="nx">k</span><span class="p">.</span><span class="nf">area</span><span class="p">({</span> <span class="na">shape</span><span class="p">:</span> <span class="k">new</span> <span class="nx">k</span><span class="p">.</span><span class="nc">Rect</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nf">vec2</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span> <span class="nx">object</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span> <span class="nx">object</span><span class="p">.</span><span class="nx">height</span><span class="p">)</span>   <span class="p">}),</span>
          <span class="nx">k</span><span class="p">.</span><span class="nf">body</span><span class="p">({</span> <span class="na">isStatic</span><span class="p">:</span> <span class="kc">true</span> <span class="p">}),</span>
          <span class="nx">k</span><span class="p">.</span><span class="nf">pos</span><span class="p">(</span><span class="nx">object</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span> <span class="nx">object</span><span class="p">.</span><span class="nx">y</span><span class="p">),</span>
        <span class="p">]);</span>
      <span class="p">}</span>
      <span class="k">continue</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">if </span><span class="p">(</span><span class="nx">layer</span><span class="p">.</span><span class="nx">name</span> <span class="o">===</span> <span class="dl">"</span><span class="s2">Positions</span><span class="dl">"</span><span class="p">)</span> <span class="p">{</span>
      <span class="k">for </span><span class="p">(</span><span class="kd">const</span> <span class="nx">object</span> <span class="k">of</span> <span class="nx">layer</span><span class="p">.</span><span class="nx">objects</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if </span><span class="p">(</span><span class="nx">object</span><span class="p">.</span><span class="nx">name</span> <span class="o">===</span> <span class="dl">"</span><span class="s2">player</span><span class="dl">"</span><span class="p">)</span> <span class="p">{</span>
          <span class="nx">map</span><span class="p">.</span><span class="nf">add</span><span class="p">([</span>
            <span class="nx">k</span><span class="p">.</span><span class="nf">sprite</span><span class="p">(</span><span class="dl">"</span><span class="s2">spritesheet</span><span class="dl">"</span><span class="p">,</span> <span class="p">{</span> <span class="na">frame</span><span class="p">:</span> <span class="mi">936</span> <span class="p">}),</span> <span class="c1">// idle frame of the player sprite</span>
            <span class="nx">k</span><span class="p">.</span><span class="nf">area</span><span class="p">(),</span>
            <span class="nx">k</span><span class="p">.</span><span class="nf">pos</span><span class="p">(</span><span class="nx">object</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span> <span class="nx">object</span><span class="p">.</span><span class="nx">y</span><span class="p">),</span>
          <span class="p">]);</span>
          <span class="k">continue</span><span class="p">;</span>
        <span class="p">}</span>
      <span class="p">}</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="nf">main</span><span class="p">();</span>
</code></pre></div></div> <p>Given the code above and the content of ‚Äúmap.json‚Äù, you can figure out what‚Äôs going on easily. <br/> However, here a few observations that will help you understand the logic further :</p> <ul> <li> <p>You get the map‚Äôs data into your Kaplay game by making a fetch() call to the ‚Äúmap.json‚Äù file.</p> </li> <li> <p>We create a map Game Object acting as the parent of all Game Objects placed on the map. This is important because the position coordinates provided by ‚Äúmap.json‚Äù are all relative to the map. So if you create a Game Object without the map being the parent, the Game Object‚Äôs placement will be off. With our map Game Object we‚Äôre able to make sure the positions of tiles and colliders match.</p> </li> <li> <p>Since we‚Äôre not drawing the map tile by tile and rather just using the exported image, it‚Äôs important to skip any ‚ÄúTile Layer‚Äù in our for loop.</p> </li> </ul> <h3 id="the-results">The Results</h3> <div class="col-sm row mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/result-480.webp 480w,/assets/img/result-800.webp 800w,/assets/img/result-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/result.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <p>Now if I activate the debug mode using the ‚Äúf1‚Äù key, you can see that the collider for the bush is also placed correctly. If you were to write the player movement logic, the player could collide with the bush.</p> <div class="col-sm row mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/result2-480.webp 480w,/assets/img/result2-800.webp 800w,/assets/img/result2-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/result2.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div>]]></content><author><name></name></author><category term="posts"/><category term="level-design"/><summary type="html"><![CDATA[Using Tiled Web Map Level editor with Kaplay.]]></summary></entry><entry><title type="html">Redis A High-Performance In-Memory Data Store</title><link href="https://judahsan.github.io/blog/2024/redis/" rel="alternate" type="text/html" title="Redis A High-Performance In-Memory Data Store"/><published>2024-07-01T10:00:00+00:00</published><updated>2024-07-01T10:00:00+00:00</updated><id>https://judahsan.github.io/blog/2024/redis</id><content type="html" xml:base="https://judahsan.github.io/blog/2024/redis/"><![CDATA[<p>Redis (Remote Dictionary Server) is an open-source, in-memory data structure store used as a database, cache, and message broker. It supports various data structures such as strings, hashes, lists, sets, and sorted sets.</p> <h4 id="key-features-of-redis">Key Features of Redis</h4> <ul> <li><strong>High Performance</strong>: Redis is renowned for its low latency and high throughput, making it suitable for applications that require real-time data processing.</li> <li><strong>Persistence</strong>: Data can be stored in-memory and periodically saved to disk, ensuring durability.</li> <li><strong>Replication</strong>: Redis supports master-slave replication, allowing data to be replicated across multiple servers for redundancy and high availability.</li> <li><strong>Transactions</strong>: Redis provides atomic operations through commands like MULTI, EXEC, DISCARD, and WATCH.</li> <li><strong>Pub/Sub Messaging</strong>: Enables message broadcasting and subscription, useful for real-time applications such as chat systems and live notifications.</li> <li><strong>Lua Scripting</strong>: Supports executing scripts to perform complex operations atomically.</li> </ul> <p><a href="https://redis.io/documentation">Redis Documentation</a> provides comprehensive details on how to get started and utilize its features.</p> <h4 id="use-cases-for-redis">Use Cases for Redis</h4> <ul> <li><strong>Caching</strong>: Improve application performance by caching frequently accessed data.</li> <li><strong>Session Management</strong>: Store and manage user sessions efficiently.</li> <li><strong>Real-time Analytics</strong>: Process and analyze real-time data streams.</li> <li><strong>Message Queues</strong>: Implement queues for background processing tasks.</li> </ul> <blockquote> <p>‚ÄúRedis is not only a simple key-value store but also a rich set of powerful data structures that provide a solid foundation for building high-performance applications.‚Äù</p> </blockquote> <h4 id="getting-started-with-redis">Getting Started with Redis</h4> <ol> <li><strong>Installation</strong>: Download and install Redis from the <a href="https://redis.io/download">official website</a>.</li> <li><strong>Basic Commands</strong>: Learn the basic commands to set and get values.</li> <li><strong>Advanced Features</strong>: Explore advanced features like transactions and Lua scripting.</li> </ol> <p>For full details about Redis, visit the <a href="https://redis.io/documentation">Redis Documentation</a>.</p> <h4 id="example-commands">Example Commands</h4> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Start Redis server</span>
redis-server

<span class="c"># Connect to Redis</span>
redis-cli

<span class="c"># Set a key-value pair</span>
SET key <span class="s2">"value"</span>

<span class="c"># Get the value of a key</span>
GET key
</code></pre></div></div>]]></content><author><name></name></author><category term="technology"/><category term="redis"/><category term="database"/><category term="in-memory"/><summary type="html"><![CDATA[Understanding Redis and its benefits for modern applications]]></summary></entry><entry><title type="html">Dockerizing and Deploying Your App to Docker Hub</title><link href="https://judahsan.github.io/blog/2024/docker/" rel="alternate" type="text/html" title="Dockerizing and Deploying Your App to Docker Hub"/><published>2024-05-01T00:32:13+00:00</published><updated>2024-05-01T00:32:13+00:00</updated><id>https://judahsan.github.io/blog/2024/docker</id><content type="html" xml:base="https://judahsan.github.io/blog/2024/docker/"><![CDATA[<h2 id="first-tabs">First tabs</h2> <p>To add tabs, use the following syntax:</p> <div class="language-liquid highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">{%</span><span class="w"> </span><span class="nt">tabs</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">tab</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="nv">tab-name-1</span><span class="w"> </span><span class="cp">%}</span>

Content 1

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtab</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">tab</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="nv">tab-name-2</span><span class="w"> </span><span class="cp">%}</span>

Content 2

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtab</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtabs</span><span class="w"> </span><span class="cp">%}</span>
</code></pre></div></div> <p>With this you can generate visualizations like:</p> <ul id="log" class="tab" data-tab="4b05e840-4bb9-4d78-b247-4c58d18a335c" data-name="log"> <li class="active" id="log-php"> <a href="#">php </a> </li> <li id="log-js"> <a href="#">js </a> </li> <li id="log-ruby"> <a href="#">ruby </a> </li> </ul> <ul class="tab-content" id="4b05e840-4bb9-4d78-b247-4c58d18a335c" data-name="log"> <li class="active"> <div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">var_dump</span><span class="p">(</span><span class="s1">'hello'</span><span class="p">);</span>
</code></pre></div></div> </li> <li> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">hello</span><span class="dl">"</span><span class="p">);</span>
</code></pre></div></div> </li> <li> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">pputs</span> <span class="dl">'</span><span class="s1">hello</span><span class="dl">'</span>
</code></pre></div></div> </li> </ul> <h2 id="another-example">Another example</h2> <ul id="data-struct" class="tab" data-tab="db7752d4-f729-44e7-a4d3-5bb27d318a04" data-name="data-struct"> <li class="active" id="data-struct-yaml"> <a href="#">yaml </a> </li> <li id="data-struct-json"> <a href="#">json </a> </li> </ul> <ul class="tab-content" id="db7752d4-f729-44e7-a4d3-5bb27d318a04" data-name="data-struct"> <li class="active"> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">hello</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s2">"</span><span class="s">whatsup"</span>
  <span class="pi">-</span> <span class="s2">"</span><span class="s">hi"</span>
</code></pre></div></div> </li> <li> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"hello"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"whatsup"</span><span class="p">,</span><span class="w"> </span><span class="s2">"hi"</span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div> </li> </ul> <h2 id="tabs-for-something-else">Tabs for something else</h2> <ul id="something-else" class="tab" data-tab="d31ba974-5d0b-4d91-8e68-6efebfb55103" data-name="something-else"> <li class="active" id="something-else-text"> <a href="#">text </a> </li> <li id="something-else-quote"> <a href="#">quote </a> </li> <li id="something-else-list"> <a href="#">list </a> </li> </ul> <ul class="tab-content" id="d31ba974-5d0b-4d91-8e68-6efebfb55103" data-name="something-else"> <li class="active"> <p>Regular text</p> </li> <li> <blockquote> <p>A quote</p> </blockquote> </li> <li> <p>Hipster list</p> <ul> <li>brunch</li> <li>fixie</li> <li>raybans</li> <li>messenger bag</li> </ul> </li> </ul>]]></content><author><name></name></author><category term="posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[Here's a detailed step-by-step guide on how to create a Docker application, build a Docker image, push it to Docker Hub, and link GitHub with Docker Hub for free.]]></summary></entry></feed>